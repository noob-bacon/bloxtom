-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- GUI Setup
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "FancyCameraLockUI"

-- Drag Frame (container for toggle button and credits)
local dragFrame = Instance.new("Frame")
dragFrame.Size = UDim2.new(0, 250, 0, 150)
dragFrame.Position = UDim2.new(0.5, -125, 0.8, -75)
dragFrame.AnchorPoint = Vector2.new(0.5, 0.5)
dragFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
dragFrame.BackgroundTransparency = 0.2
dragFrame.Active = true
dragFrame.Draggable = true
dragFrame.Parent = screenGui

-- Rounded corners for dragFrame
local dragUICorner = Instance.new("UICorner")
dragUICorner.CornerRadius = UDim.new(0, 15)
dragUICorner.Parent = dragFrame

-- Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0.8, 0, 0.4, 0)
toggleButton.Position = UDim2.new(0.1, 0, 0.2, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
toggleButton.Text = "Lock Camera: OFF"
toggleButton.TextScaled = true
toggleButton.Font = Enum.Font.GothamBold
toggleButton.Parent = dragFrame

-- Rounded corners for toggleButton
local buttonUICorner = Instance.new("UICorner")
buttonUICorner.CornerRadius = UDim.new(0, 10)
buttonUICorner.Parent = toggleButton

-- Credits Label
local creditsLabel = Instance.new("TextLabel")
creditsLabel.Size = UDim2.new(1, 0, 0.3, 0)
creditsLabel.Position = UDim2.new(0, 0, 0.7, 0)
creditsLabel.BackgroundTransparency = 1
creditsLabel.Text = "Credits: PutTheHawkInTheTuah"
creditsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
creditsLabel.TextScaled = true
creditsLabel.Font = Enum.Font.Gotham
creditsLabel.Parent = dragFrame

-- Rainbow Effect for Button Text
local function rainbowText(button)
    local hue = 0
    while task.wait(0.05) do
        hue = (hue + 0.01) % 1
        button.TextColor3 = Color3.fromHSV(hue, 1, 1)
    end
end

-- Variables
local isCameraLocked = false
local currentTarget

-- Function to find the closest player
local function getClosestPlayer()
    local closestPlayer = nil
    local closestDistance = math.huge
    local char = player.Character or player.CharacterAdded:Wait()

    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("Head") then
            local otherHead = otherPlayer.Character.Head
            local screenPoint, onScreen = camera:WorldToViewportPoint(otherHead.Position)

            if onScreen then
                local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = otherPlayer
                end
            end
        end
    end

    return closestPlayer
end

-- Update camera angle
local function updateCamera()
    if isCameraLocked and currentTarget and currentTarget.Character and currentTarget.Character:FindFirstChild("Head") then
        local targetHead = currentTarget.Character.Head
        camera.CameraType = Enum.CameraType.Scriptable
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetHead.Position)
    else
        camera.CameraType = Enum.CameraType.Custom
    end
end

-- Button toggle
toggleButton.MouseButton1Click:Connect(function()
    isCameraLocked = not isCameraLocked
    toggleButton.Text = "Lock Camera: " .. (isCameraLocked and "ON" or "OFF")

    if isCameraLocked then
        currentTarget = getClosestPlayer()
    else
        camera.CameraType = Enum.CameraType.Custom
    end
end)

-- RunService loop
RunService.RenderStepped:Connect(updateCamera)

-- Start the rainbow text effect
task.spawn(function()
    rainbowText(toggleButton)
end)
